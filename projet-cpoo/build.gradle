/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'projet.cpoo'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.11.0'
    implementation 'com.google.code.gson:gson:2.10'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('run') {
     dependsOn build
    group = "Execution"
    description = "Description"
    classpath = sourceSets.main.runtimeClasspath
    main = 'projet.cpoo.main.Main'
    standardInput = System.in
}
/*
tasks.named('run'){
    dependsOn build
    group = "Execution"
    description = "Description de mort"
    classpath = sourceSets.main.runtimeClasspath
    main = 'projet.cpoo.main.Main'
    standardInput = System.in
}
*/